{"version":3,"sources":["Login.js","SidebarOption.js","Sidebar.js","VideoCard.js","axios.js","requests.js","Banner.js","Row.js","Results.js","Body.js","Player.js","App.js","serviceWorker.js","index.js"],"names":["Login","className","src","alt","href","SidebarOption","title","Icon","Sidebar","width","HomeIcon","TvIcon","LocalMoviesIcon","PersonalVideoIcon","OfflineBoltIcon","SportsSoccerIcon","ChildCareIcon","StarIcon","AccountBoxIcon","VideoCard","movie","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","key","id","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","poster_path","videoId","opts","height","playerVars","autoplay","Results","fetchblackchannels","Body","Input","placeholder","Player","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.216d22cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n  const redirectUri = \"http://localhost:3000/home\";\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://us.123rf.com/450wm/dragomirescu/dragomirescu1810/dragomirescu181001161/110066498-grunge-alphabet-letter-m-logo-design-in-white-red-and-black-colors-suitable-for-a-company-or-busines.jpg?ver=6\"\r\n        alt=\"logo\"\r\n      />\r\n      <a href={redirectUri}>LOGIN WITH MOVIEMANIA</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ title, Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport TvIcon from \"@material-ui/icons/Tv\";\r\nimport LocalMoviesIcon from \"@material-ui/icons/LocalMovies\";\r\nimport PersonalVideoIcon from \"@material-ui/icons/PersonalVideo\";\r\nimport OfflineBoltIcon from \"@material-ui/icons/OfflineBolt\";\r\nimport SportsSoccerIcon from \"@material-ui/icons/SportsSoccer\";\r\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        src=\"https://us.123rf.com/450wm/dragomirescu/dragomirescu1810/dragomirescu181001161/110066498-grunge-alphabet-letter-m-logo-design-in-white-red-and-black-colors-suitable-for-a-company-or-busines.jpg?ver=6\"\r\n        width=\"100px\"\r\n      />\r\n      {/**  <h3 className=\"head\">MovieMania</h3>*/}\r\n\r\n      <SidebarOption Icon={HomeIcon} title=\"Main Page\" />\r\n      <SidebarOption Icon={TvIcon} title=\"TV channels\" />\r\n      <SidebarOption Icon={LocalMoviesIcon} title=\"Movies\" />\r\n      <SidebarOption Icon={PersonalVideoIcon} title=\"TV series\" />\r\n      <SidebarOption Icon={OfflineBoltIcon} title=\"Concerts\" />\r\n      <SidebarOption Icon={SportsSoccerIcon} title=\"Sports\" />\r\n      <SidebarOption Icon={ChildCareIcon} title=\"For kids\" />\r\n      <SidebarOption Icon={StarIcon} title=\"Favourites\" />\r\n      <SidebarOption Icon={AccountBoxIcon} title=\"Personal data\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./VideoCard.css\";\r\nconst base_url = \"https://image.tmdb.org/t/p/\";\r\n\r\nfunction VideoCard({ movie }) {\r\n  return (\r\n    <div className=\"videoCard\">\r\n      <img\r\n        src=\"https://i.pinimg.com/originals/a5/1a/cb/a51acbe42df6ff5567f2718fd002623c.jpg\"\r\n        alt=\"red\"\r\n      />\r\n      <p>\r\n        Forever alone in a crowd, failed comedian Arthur Fleck seeks connection\r\n        as he walks the streets of Gotham City. Arthur wears two masks -- the\r\n        one he paints for his day job as a clown....\r\n      </p>\r\n      <p>1 Jan 2018</p>\r\n      <h2>Joker</h2>\r\n      <p>Number of likes.......</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoCard;\r\n","import axios from \"axios\";\r\n\r\n/** base url to make requests  to the movie database*/\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\n\r\nexport default instance;\r\n","const API_KEY = \"7e601b64b5796b19a9923c41ee0395a4\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n        // Math.floor(Math.random() * request.data.results.length - 1)\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []); //this will load once as the dependency is empty[]\r\n  console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"Cover\",\r\n        backgroundImage: `url(\r\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner--fadebottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  //A snippet of code which runs based on a specific condition/variable\r\n\r\n  useEffect(() => {\r\n    //if [] , run once when the row loads,and dont run it again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      //\"https://api.themoviedb.org/3//discover/tv?api_key=${API_KEY}&with_networks=213\"\r\n\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  console.log(movies);\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          //https://www.youtube.com/watch?v=XtMThy8QKqU  - we need last code\r\n          const urlParams = new URLSearchParams(new URL(url).search); //this is to get everything after the ques mark\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    //row_posters is inside a container\r\n    <div className=\"row\">\r\n      <h2>{title} </h2>\r\n      <div className=\"row_posters\">\r\n        {/* several row_posters */}\r\n\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Results.css\";\r\nimport VideoCard from \"./VideoCard\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport instance from \"./axios\";\r\nimport Banner from \"./Banner\";\r\nimport Row from \"./Row\";\r\n\r\nfunction Results() {\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchblackchannels);\r\n      setMovies(request.data.results);\r\n      console.log(request);\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"results\">\r\n      {movies.map((movie) => (\r\n        <VideoCard movie={movie} />\r\n      ))}\r\n      <Banner />\r\n      <Row\r\n        title=\"Netflix Originals\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow={true}\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport { Input, InputLabel, Button } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport EmojiPeopleIcon from \"@material-ui/icons/EmojiPeople\";\r\nimport Results from \"./Results\";\r\n\r\nfunction Body(Icon) {\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"body__header\">\r\n        <SearchIcon className=\"bit\" />\r\n        <Input className=\"body__option\" placeholder=\"Search\"></Input>\r\n        <div className=\"btn1\">\r\n          {\" \"}\r\n          <button className=\"btn1\">\r\n            <PublicIcon></PublicIcon>\r\n            <p>EN</p>\r\n          </button>\r\n          <button className=\"btn2\">\r\n            <AccountBoxIcon></AccountBoxIcon>\r\n            <p>Login</p>\r\n          </button>\r\n          <button className=\"btn2\">\r\n            <EmojiPeopleIcon></EmojiPeopleIcon>\r\n            <p>TryNow</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Results />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\n\r\nfunction Player() {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        {/* Sidebar */}\r\n        {/* Side bar and body are going to be next to each other so we wrap them inside a div*/}\r\n        <Body />\r\n        {/* Body */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport Player from \"./Player\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* Cinemaye Logo */}\n      {/* EN */}\n      {/* Login */}\n      {/* Try Now */}\n      <Login />\n      <Player />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}